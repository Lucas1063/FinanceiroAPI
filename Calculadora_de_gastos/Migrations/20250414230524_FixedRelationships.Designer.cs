// <auto-generated />
using System;
using FinanceiroAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Calculadora_de_gastos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250414230524_FixedRelationships")]
    partial class FixedRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Calculadora_de_gastos.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Calculadora_de_gastos.Models.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer")
                        .HasColumnName("CategoriaId");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Fixo")
                        .HasColumnType("boolean");

                    b.Property<int>("TipoMovimentacaoId")
                        .HasColumnType("integer")
                        .HasColumnName("TipoMovimentacaoId");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("UsuarioId");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("TipoMovimentacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Movimentacoes", (string)null);
                });

            modelBuilder.Entity("Calculadora_de_gastos.Models.TipoMovimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoMovimentacoes");
                });

            modelBuilder.Entity("Calculadora_de_gastos.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Calculadora_de_gastos.Models.Categoria", b =>
                {
                    b.HasOne("Calculadora_de_gastos.Models.Usuario", null)
                        .WithMany("Categorias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Calculadora_de_gastos.Models.Movimentacao", b =>
                {
                    b.HasOne("Calculadora_de_gastos.Models.Categoria", "Categoria")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calculadora_de_gastos.Models.TipoMovimentacao", "TipoMovimentacao")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("TipoMovimentacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calculadora_de_gastos.Models.Usuario", "Usuario")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("TipoMovimentacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Calculadora_de_gastos.Models.Categoria", b =>
                {
                    b.Navigation("Movimentacoes");
                });

            modelBuilder.Entity("Calculadora_de_gastos.Models.TipoMovimentacao", b =>
                {
                    b.Navigation("Movimentacoes");
                });

            modelBuilder.Entity("Calculadora_de_gastos.Models.Usuario", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Movimentacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
